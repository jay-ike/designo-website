@layer resets, layout, typography, utilities, theme;


@font-face {
    font-family: "Just";
    src: url("/assets/just-vf.ttf") format("truetype");
    font-weight: 300 900;
    font-feature-settings: "dlig" on, "ordn" on, "ss02" on, "zero" on;
    font-display: swap;
}

body {
    --primary-clr: var(--system-color-peach);
    font-family: "Just", -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
        'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
        sans-serif;
    line-height: 1.5;
    letter-spacing: .035em;
    word-spacing: 0.05em;
    accent-color: var(--system-color-peach);
    color: var(--system-color-black);
    font-size: 100%;
    isolation: isolate;
    font-feature-settings: "zero" on, "dlig" on, "ss02" on, "ordn" on;
}

@layer resets {
    :is(*, ::before, ::after) {
        box-sizing: border-box;
    }

    :is(h2, h3, h4, h5) {
        line-height: 1.2;
        overflow-wrap: break-word;
        hyphens: auto;
        letter-spacing: -0.01em;
    }

    h1 {
        line-height: 1.1;
        letter-spacing: 0.04em;
    }

    :is(body, h1, h2, h3, h4, h5, dl, dt, dd, p) {
        margin: 0;
    }

    :is(img, svg) {
        max-inline-size: 100%;
        display: block;
    }

    :is(ul, ol, fieldset, legend, menu, [popover]) {
        margin: 0;
        padding: 0;
    }

    :is(summary, ul):where([class]) {
        list-style: none;
    }

    :is(button, fieldset) {
        border: none;
    }

    dialog {
        position: fixed;
        inset: 0;
        margin: auto;
        container: dialog / inline-size;
        inline-size: min(540px, 90vi);
        border: none;
    }

    dialog[open] {
        transform: scale(1);
    }

    :is(dialog, [popover])::backdrop {
        background-color: hsla(0, 0%, 0%, 0.8);
    }

    a {
        --outline-style: dashed;
        text-transform: uppercase;
        font-weight: 700;
        display: inline-block;

        &:not([class]) {
            --outline-style: dashed;
            text-decoration-thickness: max(0.08em, 1px);
            text-underline-offset: 0.15em;
            color: var(--link-clr, inherit);

            &:not(:disabled):where(:focus-visible, :hover) {
                --icon-fill: oklch(92% 48% 35);
                color: var(--fill-hover, var(--icon-fill));
                text-decoration: currentColor wavy underline;
            }
        }

        &:where([class]) {
            text-decoration: none;
            color: var(--link-clr, var(--icon-fill, inherit));
        }
    }

    button:not(.reset-btn) {
        --min-padding: .75em;
        min-inline-size: 3rem;
        min-block-size: 3rem;
        font-weight: bold;
        letter-spacing: 1px;
        text-transform: uppercase;
        touch-action: manipulation;
        user-select: none;
    }

    button:not([data-icon], .reset-btn) {
        min-block-size: 2rem;
        min-inline-size: 2rem;
    }

    :focus-visible {
        --outline-size: max(2px, .3em);
        outline: var(--outline-width, var(--outline-size)) var(--outline-style, solid) var(--outline-clr, currentColor);
        outline-offset: var(--outline-offset, var(--outline-size));
    }

    :target {
        scroll-margin-block-start: 2rem;
    }

    :focus {
        scroll-margin-block-end: 8vh;
    }

    input:where([type="text"], [type="email"], [type="tel"]) {
        --outline-offset: .05em;
        padding: 0.75em;
        line-height: inherit;
        caret-color: var(--system-color-orange, currentColor);
        border-radius: .5rem;
        border: .1em solid var(--bdr-clr, hsl(0, 0%, 81%));
        inline-size: 100%;
        font-weight: 500;

        &:hover {
            --bdr-clr: var(--system-color-paleOrange);
        }

        &:focus-visible:not(:is(:invalid):not([data-new])) {
            --bdr-clr: var(--system-color-orange);
            --outline-clr: var(--system-color-orange);
        }
    }

    :is(a, button, input):focus:not(:focus-visible) {
        outline: none;
    }

    p:where(:not([class])) {
        text-wrap: balance;
        max-inline-size: var(--p-width, 50em);
    }

    main:where(body > *) {
        min-block-size: 71lvb;
    }
}

@layer utilities {
    .capitalize {
        text-transform: capitalize;
    }

    .ml-max {
        margin-inline-start: auto;
    }

    .place-end {
        place-self: end;
    }

    :is(.decorated, .relative) {
        position: relative;
    }

    .xl-stack>*+*,
    .mt-xl {
        margin-block-start: 8rem;
    }
    :where(header, .contain) {
        container: section / inline-size;
    }

    :is(.decorated, .extend-zone-start)::before,
    .extend-zone-end::after {
        content: "";
        position: absolute;
        inset: 0;
    }

    :where(h1, h2):where(:is(.banner, .contact-grid) *) {
        color: var(--system-color-darkBlue);
    }

    :is(.decorated, .logo) {
        --c1: var(--deco-clr, hsla(0, 95%, 19%, .1));
        --s: var(--deco-size, 640px);
        --rounding: radial-gradient(calc(var(--s) / 2), #000 98%, #0000);

        &::before {
            background: var(--bg, linear-gradient(15deg, #0000, var(--c1)) right 0 top 5rem / var(--s) var(--s) no-repeat);
            mask: var(--mask, var(--rounding) left 0 top 5rem / var(--s) var(--s) no-repeat);
            z-index: -1;
        }
    }

    .logo {
        --deco-size: 24px;
        --bg: conic-gradient(var(--system-color-peach), #0000) 0 / var(--s) no-repeat;
        --mask: var(--rounding) 0 / var(--s) no-repeat;
        letter-spacing: 5px;
        color: inherit;

        &::before {
            content: "";
            inline-size: var(--s);
            aspect-ratio: 1;
        }
    }

    .banner {
        --min-padding: 60px 1.5em 0;
        --alignment: center;
        --deco-size: var(--m-height);
        text-align: center;
        max-block-size: var(--m-height, 768px);
        overflow-y: clip;
        background-color: var(--system-color-peach);
        clip-path: var(--b-clip, inset(0 round .5rem));
    }

    .btn-primary {
        --min-padding: .75em 1.5em;
        --color-fill: var(--system-color-white);
        --radius: .5rem;

        &:where(:focus-visible, :hover) {
            --color-text: var(--system-color-darkBlue);
            --color-fill: oklch(78% 32% 35);
        }
    }

    [data-icon-position="start"]::before,
    [data-icon-position="end"]::after {
        content: "";
        min-inline-size: var(--icon-size, 1.5em);
        aspect-ratio: var(--icon-ratio, 1);
        background-color: var(--icon-fill, currentColor);
        transform: var(--icon-transform, none);
        clip-path: var(--icon-clip, none);
        align-self: var(--icon-align, self-start);
    }

    [data-icon-position="start"]:where(:enabled, a):where(:hover, :focus-visible)::before,
    [data-icon-position="end"]:where(a, :enabled):where(:hover, :focus-visible)::after {
        --icon-fill: var(--icon-fill-hover, currentColor);
        --icon-transform: var(--icon-hoverTransform, inherit);
    }

    :is([data-icon="arrow_left"], [data-icon="arrow_right"]) {
        --icon-clip: url(#arrow_left);
        --icon-transform: var(--i-trans, none);
        --icon-hoverTransform: var(--i-h-trans, translateX(0.5em));
    }

    [data-icon="arrow_right"] {
        --i-trans: rotate(180deg);
        --i-h-trans: var(--i-trans) translateX(0.5em);
    }

    [data-icon="cross"] {
        --icon-clip: url(#cross);
        --icon-size: 2rem;
        --icon-fill-hover: var(--system-color-softRed);
    }

    a:where(:is(.decorated, .services, nav, footer) *),
    .links {
        --f-size-fluid: 2.5cqi;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: var(--i-gap, 16px);
    }

    .links {
        font-weight: 400;
    }

    :where([aria-hidden="true"], .visually-hidden, .md-show) {
        max-inline-size: 1px;
        position: absolute;
        clip-path: inset(50%);
    }


    .md-show {
        overflow: hidden;
        visibility: hidden;
    }

    nav:where(body > *):has(:popover-open) {
        --m: 0 70;
        --so: -41;
        --c: 53, 42;
        --translation: none;
    }

    [popover] {
        border: none;
        isolation: isolate;

        &::before {
            content: "";
            position: fixed;
            inset: 0;
            z-index: -1;
        }
    }

    #mobile-menu {
        --y: 0;
        --s-space: 2em;
        inline-size: 100vi;
    }

    button:not(:enabled) {
        color: hsl(0, 0%, 75%);
    }

    :where(.menu, [role="dialog"]) {
        position: fixed;
        transform: var(--translation, translateX(-50vmax));
    }

    [role="dialog"] {
        --outline-clr: var(--system-color-black);
        inset-block-start: var(--y, auto);
        inset-inline-end: var(--right-x, auto);
    }

    .branding>img {
        border-radius: .5rem;
        align-self: stretch;
        max-block-size: var(--img-h, 300px);
        min-inline-size: var(--img-w, 100%);
        object-fit: cover;
        object-position: top 2% left 5%;
    }

    .no-gap {
        --r-space: 0;
    }

    :is(.no-padding, .reset-btn) {
        --min-padding: 0;
        --radius: 0;
    }

    @media screen and (min-width: 480px) {
        .banner {
            --x: right calc(-1 * (var(--s) / 4));
            --y: top 2rem;
            --bg: linear-gradient(15deg, #0000, var(--c1)) var(--x) var(--y) / var(--s) no-repeat;
            --mask: var(--rounding) var(--x) var(--y) / var(--s) no-repeat;
        }

        .md-show {
            max-inline-size: max-content;
            position: static;
            clip-path: none;
            visibility: visible;
        }
    }

    @media screen and (min-width: 768px) {
        .banner {
            --min-padding: 5rem 1.5rem 0;
            --m-height: 480px;
            --col-dir: row;
            --x: right 0;
            --y: top 0;
            --s: 480px;
            --p-width: 30em;
            --i-alignment: space-between;
            text-align: start;

            img:where(& *) {
                min-inline-size: 284px;
            }
            div:where(& > *) {
                max-inline-size: 40em;
            }
        }

    }

}

@layer theme {
    :root {
        --system-color-black: oklch(8% 6% 10);
        --system-color-white: oklch(95% 1% 10);
        --system-color-darkBlue: hsl(222, 31%, 19%);
        --system-color-orange: hsl(10, 64%, 48%);
        --system-color-lightOrange: hsl(14, 76%, 97%);
        --system-color-peach: oklch(75% 51% 31);
        color-scheme: light;
    }
}


@layer typography {
    :is(h1, h2, h3, h4, h5, p, dt, dd, legend, .fluid-type) {
        font-size: clamp(var(--f-size, 1rem) * clamp(0.5, 1 - var(--f-size-diff, 0.3), 0.9),
                var(--f-size-fluid, var(--default-fluid, 3vw)),
                var(--f-size, 1rem));
    }

    :is(h2, h3, h4, h5) {
        text-transform: var(--t-transform, uppercase);
    }

    h1 {
        --f-size: 3rem;
        --f-size-diff: 0.4;
    }

    h2 {
        --f-size: 2.5rem;
        --f-size-diff: 0.45;
    }

    h3 {
        --f-size: 1.5rem;
    }
    h4 {
        --f-size: 1.25rem;
    }

    h5 {
        --f-size: 1.125rem;
    }

    @supports (font-size: 1cqi) {
        :is(h1, h2, h3, h4, p, dt, dd, .fluid-type, footer a) {
            --default-fluid: 5cqi;
        }
    }
}

@layer layout {
    .stack>*+* {
        margin-block-start: var(--s-space, 1.5em);
    }

    :is(.row, .column, .segragator, .cart-modal) {
        display: flex;
        align-items: var(--alignment, center);
        gap: var(--r-space, var(--c-space, 1.5em));
        justify-content: var(--i-alignment, start);
    }

    .segragator {
        --i-alignment: space-between;
        flex-flow: var(--direction, row) var(--wrap, nowrap);
    }

    .row {
        --alignment: var(--row-align, center);
        flex-flow: var(--row-dir, row) var(--wrap, nowrap);
    }

    :where(.column, .cart-modal) {
        --alignment: var(--col-align, stretch);
        flex-flow: var(--col-dir, column) var(--wrap, nowrap);
    }

    :is(.center, .img-box) {
        display: grid;
        place-items: center;
        place-content: center;
        gap: var(--s-space, var(--c-space, 1.5em));
    }

    :where(header, footer, .box, button, .btn) {
        padding: var(--min-padding, 1.5em);
        background-color: var(--color-fill, transparent);
        color: var(--color-text, currentColor);
        border-radius: var(--radius, 0);
    }

    .box-dark {
        --color-fill: var(--system-color-black);
        --color-text: var(--system-color-white);
    }

    :is([class$="grid"], footer) {
        --col-align: center;
        display: grid;
        grid-template: var(--g-template);
        container: var(--container-name, grid) / inline-size;
        gap: var(--g-gap, 1rem);
        place-items: var(--p-items, initial);

        &> :first-child {
            grid-area: area1;
        }

        &> :nth-child(2) {
            grid-area: area2;
        }

        &> :nth-child(3) {
            grid-area: area3;
        }

        &> :nth-child(4) {
            grid-area: area4;
        }

        &> :nth-child(5) {
            grid-area: area5;
        }
    }

    .responsive-grid {
        --max-col-width: var(--m-col-w, 12rem);
        --min-row-height: var(--m-row-h, 15rem);
        --max-cols: var(--m-col-s, 3);
        --gap: var(--c-gap, 1rem);
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(min(100%, max(var(--max-col-width), (100% / var(--max-cols)) - var(--gap))),
                    1fr));
        grid-auto-rows: minmax(var(--min-row-height), auto);
        gap: var(--gap);
    }

    .service_content {
        background-color: var(--bg-clr, transparent);
        border-image: linear-gradient(#0009, #0009) 1 fill;
    }

    .services {
        --i-gap: 0;
        --min-padding: 0;
        --m-col-w: 100%;
        --c-gap: 1.5rem;
        --m-col-s: 2;
        --f: 1.3;


        img {
            block-size: var(--m-row-h, 250px);
            min-inline-size: 100%;
            object-fit: cover;
            object-position: right 10% bottom 0;
            transform: var(--_img-transform, none);
            clip-path: var(--_img-clip, none);
        }

        &>li {
            --icon-fill: var(--system-color-peach);
            display: grid;
            grid-template: "area1";
            container: hero / inline-size;
            clip-path: inset(0 round .5rem);
            place-items: stretch;
            color: var(--system-color-white);

            &:where(:focus-within, :hover) {
                --bg-clr: oklch(75% 59% 31 / 0.5);
                --_img-clip: inset((1 - 1 / var(--f)) * 50%);
                --_img-transform: scale(var(--f));
            }

            &>* {
                grid-area: area1;
                isolation: isolate;
            }

        }
    }

    .features {
        --g-template: "area1" "area2";
        --p-items: stretch center;
        --g-gap: 1.5em;
        text-align: center;

    }

    :is(.contact-grid, main) {
        max-inline-size: min(95vi, 1110px);
        margin-inline: auto;
    }

    .contact-grid {
        --t-transform: none;
        --g-template: "area1" "area2" "area3";
        --deco-size: 292px;
        --p-items: stretch center;
        --y: calc(-1 * var(--s) / 2);
        --bg: linear-gradient(45deg, #0000, var(--c1)) right 0 top var(--y) / var(--s) no-repeat,
            linear-gradient(to right, #0000, var(--c1)) right var(--s) top var(--y) / var(--s) no-repeat,
            linear-gradient(171deg, #0000, var(--c1)) right var(--s) bottom var(--y) / var(--s) no-repeat,
            linear-gradient(-90deg, #0000, var(--c1)) right calc(2 * var(--s)) bottom var(--y) / var(--s) no-repeat,
            linear-gradient(25deg, #0000, var(--c1)) right 0 bottom var(--y) / var(--s) no-repeat;
        --mask: var(--rounding) right 0 top var(--y) / var(--s) no-repeat,
            var(--rounding) right var(--s) top var(--y) / var(--s) no-repeat,
            var(--rounding) right var(--s) bottom var(--y) / var(--s) no-repeat,
            var(--rounding) right calc(2 * var(--s)) bottom var(--y) / var(--s) no-repeat,
            var(--rounding) right 0 bottom var(--y) / var(--s) no-repeat;
        --color-fill: var(--system-color-peach);
        --radius: .5rem;
        text-align: center;
        container: contact / inline-size;
        block-size: var(--deco-size);
    }

    footer {
        --min-padding: 2em 1.5em 1.5em;
        --color-text: var(--system-color-white);
        --g-template: "area1" "area2" "area3" "area4" "area5";
        --g-gap: 2.5em 1.5em;
        --c-space: .75rem;
        --p-items: center;
        --icon-fill: var(--system-color-peach);
        text-align: center;
        position: relative;
        z-index: -1;
        border-image: linear-gradient(var(--system-color-black), var(--system-color-black)) 1 fill / 50%/ 4rem 100vi 0;

        dt {
            font-weight: bold;
        }
        & > a:first-of-type {
            --c: oklch(95% 1% 10 / 0.15);
            border-image: linear-gradient(var(--c), var(--c)) 0 0 1 / 2px / var(--outset, 0 calc((min(95vi, 1110px) / 2) - 5em) 1.25em);
        }
    }

    nav {
        position: sticky;
        inset-block-start: 0;
        z-index: 1;
        isolation: isolate;
        background-color: canvas;

        &:where(body > *) {
            min-block-size: 96px;
        }
    }

    @media screen and (min-width: 568px) {
        footer {
            --min-padding: 1.5em 0;
            --col-dir: row;
            --g-template: "area1 area1 area2 area2 area2" "area3 area3 area4 area4 area5" / 1fr 1fr 1.5fr 1fr fit-content(9rem);
            --s-space: .75rem;
            --p-items: end start;
            --outset: 0 calc(min(95vi, 1110px) - 9em) 1.25em 0;
            text-align: start;

            &>ul {
                place-self: end;
            }
        }
    }

    @media screen and (min-width: 480px) {

        .services {
            --m-row-h: 200px;
        }

        nav:where(body > *) {
            --min-padding: 1.5em 0;
        }

        .features {
            --g-template: "area1 area2";
            --p-items: center;
            text-align: start;
        }

        :is(footer, header, nav, .main-content) {
            max-inline-size: min(95vi, 1110px);
            margin-inline: auto;
        }

        .md-remove {
            display: none;
        }
    }

    @media screen and (min-width: 768px) {
        .contact-grid {
            --g-template: "area1 . ." "area2 . area3" "area2 . ." / fit-content(30em) 1fr max-content;
            --p-items: start stretch;
            --min-padding: 1.5em 3em;
            text-align: start;

            &> :first-child {
                align-self: end;
            }
        }

        .services {
            --m-col-w: 12rem;

            &> :first-of-type:nth-last-of-type(3) {
                --m-row-h: calc(400px + var(--gap));
                grid-row: span 2;
            }
        }

        :where(header, .features) {
            --col-dir: row;
        }

        .features {
            --g-template: "area1" "area2";
            text-align: center;

            &>* {
                flex: 2 1 auto;
            }
        }
    }
}

@media screen and (prefers-reduced-motion: no-preference) {

    :is(a, img, .service_content, [popover]),
    [data-icon-position="start"]::before,
    [data-icon-position="end"]::after {
        transition: all .35s ease-out;
    }

    nav {
        --h-transition: stroke-dasharray .6s cubic-bezier(.25, .1, .3, 1.5),
            stroke-dashoffset .6s cubic-bezier(.25, .1, .3, 1.5);
    }
}
