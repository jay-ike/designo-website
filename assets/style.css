@layer resets, layout, typography, utilities, theme;

@layer resets {
    :is(*, ::before, ::after) {
        box-sizing: border-box;
    }

    :is(h2, h3, h4, h5) {
        line-height: 1.2;
        overflow-wrap: break-word;
        hyphens: auto;
        letter-spacing: -0.01em;
    }

    h1 {
        line-height: 1.1;
        letter-spacing: 0.04em;
    }

    :is(body, h1, h2, h3, h4, h5, dl, dt, dd, p) {
        margin: 0;
    }

    :is(img, svg) {
        max-inline-size: 100%;
        height: auto;
        display: block;
    }

    :is(ul, ol, fieldset, legend, menu) {
        margin: 0;
        padding: 0;
    }

    :is(summary, ul):where([class]) {
        list-style: none;
    }

    :is(button, fieldset) {
        border: none;
    }

    dialog {
        position: fixed;
        inset: 0;
        margin: auto;
        container: dialog / inline-size;
        inline-size: min(540px, 90vi);
        border: none;
    }

    dialog[open] {
        transform: scale(1);
    }

    dialog::backdrop {
        background-color: hsla(0, 0%, 0%, 0.8);
    }

    a {
        --outline-style: dashed;
        text-transform: uppercase;
        font-weight: 700;
        display: inline-block;

        &:not([class]) {
            --outline-style: dashed;
            text-decoration-thickness: max(0.08em, 1px);
            text-underline-offset: 0.15em;
            color: var(--link-clr, inherit);

            &:enabled:where(:focus-visible, :hover) {
                color: var(--system-color-paleOrange);
                text-decoration: currentColor wavy underline;
            }
        }

        &:where([class]) {
            text-decoration: none;
            color: var(--link-clr, var(--icon-fill, inherit));
        }
    }

    button:not(.reset-btn) {
        --min-padding: .75em;
        min-inline-size: 3rem;
        min-block-size: 3rem;
        font-weight: bold;
        letter-spacing: 1px;
        text-transform: uppercase;
        touch-action: manipulation;
        user-select: none;
    }

    button:not([data-icon], .reset-btn) {
        min-block-size: 2rem;
        min-inline-size: 2rem;
    }

    :focus-visible {
        --outline-size: max(2px, .3em);
        outline: var(--outline-width, var(--outline-size)) var(--outline-style, solid) var(--outline-clr, currentColor);
        outline-offset: var(--outline-offset, var(--outline-size));
    }

    :target {
        scroll-margin-block-start: 2rem;
    }

    :focus {
        scroll-margin-block-end: 8vh;
    }

    input:where([type="text"], [type="email"], [type="tel"]) {
        --outline-offset: .05em;
        padding: 0.75em;
        line-height: inherit;
        caret-color: var(--system-color-orange, currentColor);
        border-radius: .5rem;
        border: .1em solid var(--bdr-clr, hsl(0, 0%, 81%));
        inline-size: 100%;
        font-weight: 500;

        &:hover {
            --bdr-clr: var(--system-color-paleOrange);
        }

        &:focus-visible:not(:is(:invalid):not([data-new])) {
            --bdr-clr: var(--system-color-orange);
            --outline-clr: var(--system-color-orange);
        }
    }

    :is(a, button, input):focus:not(:focus-visible) {
        outline: none;
    }

    p:where(:not([class])) {
        text-wrap: balance;
        max-inline-size: var(--p-width, 50em);
    }

    main:where(body > *) {
        min-block-size: 71lvb;
    }
}

@layer utilities {
    .capitalize {
        text-transform: capitalize;
    }

    .relative {
        position: relative;
    }

    .no-shrink {
        flex-shrink: 0;
    }

    .s-gap-xl {
        --s-space: 8rem;
    }

    :is(.not-empty:empty, .not-empty-sibling:where(.not-empty:empty ~ *, form:has(.not-empty:empty) *)) {
        display: none;
    }

    .not-empty:not(:empty)~.empty {
        display: none;
    }

    .empty {
        container: empty-state / inline-size;
        text-align: center;
    }

    :is(.item-grid, .cart-item-grid) {
        --g-template: "area4 . ." 1px "area4 area1 area3" "area4 area2 ." / max-content 1fr;
        --g-gap: .4rem 1rem;

        &> :is(p, span) {
            color: var(--items-clr, hsl(0, 0%, 43%));
        }
    }

    .cart-item-grid {
        --g-template: "area4 . ." 1px "area4 area1 area3" "area4 area2 area3" "area4 . ." 1px / max-content 1fr max-content;
        align-items: center;
    }

    .banner {
        --alignment: center;
        text-align: center;
        clip-path: var(--b-clip, none);
        max-block-size: var(--m-height, 800px);
        overflow-y: clip;
    }

    :where(.reset-btn) {
        text-decoration: underline;
    }

    dialog:not([open]) {
        transform: scale(0);
    }


    [data-icon-position="start"]::before,
    [data-icon-position="end"]::after {
        content: "";
        min-inline-size: var(--icon-size, 1.5em);
        aspect-ratio: var(--icon-ratio, 1);
        display: inline-block;
        background-color: var(--icon-fill, currentColor);
        transform: var(--icon-transform, none);
        clip-path: var(--icon-clip, none);
        align-self: var(--icon-align, self-start);
    }

    [data-icon-position="start"]:where(:enabled, a):where(:hover, :focus-visible)::before,
    [data-icon-position="end"]:where(a, :enabled):where(:hover, :focus-visible)::after {
        --icon-fill: var(--icon-fill-hover, currentColor);
        --icon-transform: var(--icon-hoverTransform, inherit);
    }

    :is([data-icon="arrow_left"], [data-icon="arrow_right"]) {
        --icon-clip: url(#arrow_left);
        --icon-transform: var(--i-trans, none);
        --icon-hoverTransform: var(--i-h-trans, translateX(0.5em));
    }

    [data-icon="arrow_right"] {
        --i-trans: rotate(180deg);
        --i-h-trans: var(--i-trans) translateX(0.5em);
    }

    [data-icon="cross"] {
        --icon-clip: url(#cross);
        --icon-size: 2rem;
        --icon-fill-hover: var(--system-color-softRed);
    }

    [data-icon="plus"] {
        --icon-clip: url(#plus);
    }

    [data-icon="minus"] {
        --icon-clip: url(#minus);
    }

    [data-icon="check-circle"] {
        --icon-clip: url(#check-circle);
    }

    a:where(:is(.categories, nav) *) {
        text-decoration: none;
        display: inline-flex;
        align-items: center;
    }

    :where([aria-hidden="true"], .visually-hidden, .md-show, .pm-grid input[type="radio"]) {
        position: absolute;
        clip-path: inset(50%);
    }

    .visually-hidden {
        max-inline-size: 1px;
    }

    .md-show {
        --wrap: wrap;
        visibility: hidden;
    }

    button.xl-remove[aria-pressed="true"] {
        --m: 0 70;
        --so: -41;
        --c: 53, 42;
    }

    button:not(:enabled) {
        color: hsl(0, 0%, 75%);
    }

    :where(.menu, [role="dialog"]) {
        position: fixed;
        transform: var(--translation, translateX(-50vmax));
        opacity: 0;
        inline-size: var(--modal-size, auto);
        visibility: hidden;
    }

    [role="dialog"] {
        --outline-clr: var(--system-color-dark);
        inset-block-start: var(--y, auto);
        inset-inline-end: var(--right-x, auto);
    }

    .branding>img {
        border-radius: .5rem;
        align-self: stretch;
        max-block-size: var(--img-h, 300px);
        min-inline-size: var(--img-w, 100%);
        object-fit: cover;
        object-position: top 2% left 5%;
    }

    .no-gap {
        --r-space: 0;
    }

    :is(.no-padding, .reset-btn) {
        --min-padding: 0;
        --radius: 0;
    }

    @media screen and (min-width: 480px) {
        .pm-grid {
            --g-template: "area1 area1" "area2 area3";
        }

        .md-show {
            position: static;
            clip-path: none;
            visibility: visible;
        }
    }

    @media screen and (min-width: 768px) {
        .banner {
            --min-padding: 8rem 1.5rem 0;
            --m-height: 30rem;
            --col-dir: row;
            text-align: start;

            img:where(&  *) {
                min-inline-size: 284px;
            }
        }

    }

}

@layer layout {
    .stack>*+* {
        margin-block-start: var(--s-space, 1.5em);
    }

    :is(.row, .column, .segragator, .cart-modal) {
        display: flex;
        align-items: var(--alignment, center);
        gap: var(--r-space, var(--c-space, 1.5em));
        justify-content: var(--i-alignment, start);
    }

    .segragator {
        --i-alignment: space-between;
        flex-flow: var(--direction, row) var(--wrap, nowrap);
    }

    .row {
        --alignment: var(--row-align, center);
        flex-flow: var(--row-dir, row) var(--wrap, nowrap);
    }

    :where(.column, .cart-modal) {
        --alignment: var(--col-align, stretch);
        flex-flow: var(--col-dir, column) var(--wrap, nowrap);
    }

    .self-end {
        align-self: end;
        margin-inline-start: auto;
    }

    :is(.center, .img-box) {
        display: grid;
        place-items: center;
        place-content: center;
        gap: var(--s-space, var(--c-space, 1.5em));
    }

    :where(header, footer, main, .box, button, .btn-primary) {
        padding: var(--min-padding, 1.5em);
        background-color: var(--color-fill, transparent);
        color: var(--color-text, currentColor);
        border-radius: var(--radius, 0);
    }

    :is([class$="grid"], footer) {
        --col-align: center;
        display: grid;
        grid-template: var(--g-template);
        container: var(--container-name, grid) / inline-size;
        gap: var(--g-gap, 1rem);

        &> :first-child {
            grid-area: area1;
        }

        &> :nth-child(2) {
            grid-area: area2;
        }

        &> :nth-child(3) {
            grid-area: area3;
        }

        &> :nth-child(4) {
            grid-area: area4;
        }

        &> :nth-child(5) {
            grid-area: area5;
        }
    }

    :is(footer, header) {
        --color-fill: var(--system-color-dark);
    }

    footer {
        --min-padding: 2em 1.5em 1.5em;
        --color-text: var(--system-color-white);
        --g-template: ". area1 ." ". area2 ." "area3 area3 area3" "area4 area4 area4" "area5 area5 area5";
        --c-space: .75rem;
        border-image: linear-gradient(var(--system-color-dark), var(--system-color-dark)) 1 fill / 50%/ 0 100vi;
    }

    nav {
        position: sticky;
        inset-block-start: 0;
        z-index: 1;
        isolation: isolate;
        background-color: canvas;
    }

    @media screen and (min-width: 480px) {
        footer {
            --min-padding: 1.5em 0;
            --col-dir: row;
            --g-template: "area1 area1 area1" "area2 area2 area2" "area3 area3 area3" "area4 area4 area5" / 1fr 1fr max-content;

        }

        :is(main, footer, header, nav, .main-content) {
            max-inline-size: min(95vi, 1110px);
            margin-inline: auto;
        }

        .md-remove {
            display: none;
        }
    }

    @media screen and (min-width: 768px) {

        footer {
            --g-template: "area1 area2 area2" "area3 area3 ." "area3 area3 area5" "area4 area4 ." / 1fr 1fr;
        }

        footer>ul {
            justify-self: end;
        }

        nav {
            --i-alignment: space-between;
            --cart-margin: 0;
        }

        header {
            --col-dir: row;
        }

    }
}
